#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã C++ –º–æ–¥—É–ª—è —Å Polars DataFrame'–∞–º–∏.
"""

import sys
import os
import polars as pl
from datetime import datetime, timezone

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_polars_dataframes():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ Polars DataFrame'–æ–≤ –∏–∑ C++ —Å—Ç—Ä—É–∫—Ç—É—Ä."""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Polars DataFrame'–æ–≤ –∏–∑ C++ —Å—Ç—Ä—É–∫—Ç—É—Ä...")
    
    try:
        import cpp_data_processor
        print("‚úÖ C++ –º–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ C++ –º–æ–¥—É–ª—è: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    data = {
        'trade_id': [1, 2, 3, 4, 5],
        'price': [50000.0, 50100.0, 50050.0, 50200.0, 50150.0],
        'quantity': [0.1, 0.2, 0.15, 0.3, 0.25],
        'is_buy': [True, False, True, False, True],
        'datetime': [
            datetime(2024, 1, 1, 10, 0, 0, tzinfo=timezone.utc),
            datetime(2024, 1, 1, 10, 1, 0, tzinfo=timezone.utc),
            datetime(2024, 1, 1, 10, 2, 0, tzinfo=timezone.utc),
            datetime(2024, 1, 1, 10, 3, 0, tzinfo=timezone.utc),
            datetime(2024, 1, 1, 10, 4, 0, tzinfo=timezone.utc),
        ]
    }
    
    df = pl.DataFrame(data)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π DataFrame: {df.shape}")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ C++ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    trades = cpp_data_processor.DataConverter.from_polars_trades(df)
    print(f"‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ C++ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {len(trades)} –∑–∞–ø–∏—Å–µ–π")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Polars DataFrame'–æ–≤ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä
    print("\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Polars DataFrame'–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ C++ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    from cpp_data_processor import CandleData, BollingerBands, RSIData, VelocityData
    
    # –¢–µ—Å—Ç 1: Candles DataFrame
    candles = [
        CandleData(50000.0, 50100.0, 49900.0, 50050.0, 1.5, 1, 5, 1640995200000, 1640995260000, 5),
        CandleData(50050.0, 50200.0, 50000.0, 50150.0, 2.0, 6, 10, 1640995260000, 1640995320000, 5)
    ]
    
    candles_df = cpp_data_processor.DataConverter.to_polars_candles(candles)
    print(f"‚úÖ Candles DataFrame: {candles_df.shape}")
    print(f"   –ö–æ–ª–æ–Ω–∫–∏: {candles_df.columns}")
    
    # –¢–µ—Å—Ç 2: Bollinger Bands DataFrame
    bollinger = BollingerBands()
    bollinger.upper_band = [50100.0, 50200.0, 50300.0]
    bollinger.middle_band = [50000.0, 50100.0, 50200.0]
    bollinger.lower_band = [49900.0, 50000.0, 50100.0]
    bollinger.timeperiod = 20
    
    bollinger_df = cpp_data_processor.DataConverter.to_polars_bollinger(bollinger)
    print(f"‚úÖ Bollinger DataFrame: {bollinger_df.shape}")
    print(f"   –ö–æ–ª–æ–Ω–∫–∏: {bollinger_df.columns}")
    
    # –¢–µ—Å—Ç 3: RSI DataFrame
    rsi = RSIData()
    rsi.rsi_values = [45.5, 52.3, 48.7, 55.1]
    rsi.timeperiod = 14
    
    rsi_df = cpp_data_processor.DataConverter.to_polars_rsi(rsi)
    print(f"‚úÖ RSI DataFrame: {rsi_df.shape}")
    print(f"   –ö–æ–ª–æ–Ω–∫–∏: {rsi_df.columns}")
    
    # –¢–µ—Å—Ç 4: Velocity DataFrame
    velocity = VelocityData()
    velocity.velocity_values = [10.5, 12.3, 8.7, 15.1]
    velocity.interval = "1m"
    
    velocity_df = cpp_data_processor.DataConverter.to_polars_velocity(velocity)
    print(f"‚úÖ Velocity DataFrame: {velocity_df.shape}")
    print(f"   –ö–æ–ª–æ–Ω–∫–∏: {velocity_df.columns}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ DataFrame'—ã —è–≤–ª—è—é—Ç—Å—è Polars DataFrame'–∞–º–∏
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    assert isinstance(candles_df, pl.DataFrame), "Candles –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Polars DataFrame"
    assert isinstance(bollinger_df, pl.DataFrame), "Bollinger –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Polars DataFrame"
    assert isinstance(rsi_df, pl.DataFrame), "RSI –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Polars DataFrame"
    assert isinstance(velocity_df, pl.DataFrame), "Velocity –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Polars DataFrame"
    
    print("‚úÖ –í—Å–µ DataFrame'—ã —è–≤–ª—è—é—Ç—Å—è Polars DataFrame'–∞–º–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ DataFrame'–æ–≤
    print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ DataFrame'–æ–≤...")
    
    print("Candles DataFrame:")
    print(candles_df.head())
    
    print("\nBollinger DataFrame:")
    print(bollinger_df.head())
    
    print("\nRSI DataFrame:")
    print(rsi_df.head())
    
    print("\nVelocity DataFrame:")
    print(velocity_df.head())
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Å Polars DataFrame'–∞–º–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    success = test_polars_dataframes()
    if success:
        print("\n‚úÖ C++ –º–æ–¥—É–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å Polars DataFrame'–∞–º–∏!")
        sys.exit(0)
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å Polars DataFrame'–∞–º–∏")
        sys.exit(1)
